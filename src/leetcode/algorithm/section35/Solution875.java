package leetcode.algorithm.section35;

/**
 * 珂珂喜欢吃香蕉。这里有 n 堆香蕉，第 i 堆中有piles[i]根香蕉。警卫已经离开了，将在 h 小时后回来。
 * 珂珂可以决定她吃香蕉的速度 k （单位：根/小时）。每个小时，她将会选择一堆香蕉，从中吃掉 k 根。如果这堆香蕉少于 k 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉。??
 * 珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。
 * 返回她可以在 h 小时内吃掉所有香蕉的最小速度 k（k 为整数）。
 */
public class Solution875 {
    public static int minEatingSpeed(int[] piles, int h) {

        int max=0;
        for (int i:piles) {
            if(max<i) max=i;
        }

        int start =1;
        int end = max;
        while(start < end){
            int speed = (start+end)/2;
            int s = get(speed, piles);
            if(s<=h){
                end = speed;
            }else{
                start = speed+1;
            }
        }

        return start;
    }

    public static int get(int speed ,int[] piles){
        int sum=0;
        for(int pile:piles){
            sum += (pile-1+speed)/speed;
        }
        return sum;
    }

    public static void main(String[] args) {
        int[] piles = {30,11,23,4,20};
        int h = 6;
        int i = minEatingSpeed(piles, h);
        System.out.println(i);
    }
}
