package leetcode.algorithm.section2;

import java.util.List;

/**
 * 串联所有单词的子串
 * 给定一个字符串s和一些长度相同的单词words。找出s中恰好可以由words中所有单词串联形成的子串的起始位置。
 * 注意子串要与words中的单词完全匹配，中间不能有其他字符，但不需要考虑words中单词串联的顺序。
 */
public class Solution30 {
        public List<Integer> findSubstring(String s, String[] words) {
        if (s == null || s.length() == 0 || words == null || words.length == 0) return null;
        int n = words.length;
        int l = words.length;


        return null;
    }
}
